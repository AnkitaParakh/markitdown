name: Release

on:
  release:
    types: [published]

jobs:
  pypi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ['markitdown', 'markitdown-mcp', 'markitdown-api', 'markitdown-sample-plugin']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install build tools
      run: python -m pip install --upgrade pip build twine
    
    - name: Build package
      run: python -m build packages/${{ matrix.package }}
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload packages/${{ matrix.package }}/dist/*

  docker:
    runs-on: ubuntu-latest
    needs: pypi
    strategy:
      matrix:
        package: ['markitdown-api', 'markitdown-mcp']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./packages/${{ matrix.package }}/Dockerfile
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/${{ matrix.package }}:latest
          ghcr.io/${{ github.repository }}/${{ matrix.package }}:${{ steps.version.outputs.VERSION }}